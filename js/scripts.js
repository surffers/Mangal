// Header Scroll
document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Å–æ–∫ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
    const phoneInputs = document.querySelectorAll('input[type="tel"]');
    phoneInputs.forEach(input => {
        IMask(input, {
            mask: '+{7} (000) 000-00-00',
            lazy: false,
            placeholderChar: '_'
        });
    });

    const header = document.querySelector('.header');
    
    window.addEventListener('scroll', function() {
        if (window.scrollY > 50) {
            header.classList.add('scrolled');
        } else {
            header.classList.remove('scrolled');
        }
    });
});

// Mobile Menu Toggle
document.addEventListener('DOMContentLoaded', function() {
    window.toggleMobileMenu = function() {
        const mobileMenu = document.getElementById('mobileMenu');
        if (mobileMenu.classList.contains('translate-x-full')) {
            mobileMenu.classList.remove('translate-x-full');
            mobileMenu.classList.add('translate-x-0');
            document.body.style.overflow = 'hidden';
        } else {
            mobileMenu.classList.remove('translate-x-0');
            mobileMenu.classList.add('translate-x-full');
            document.body.style.overflow = '';
        }
    };
});

// Hero Slider
document.addEventListener('DOMContentLoaded', function() {
    const slides = document.querySelectorAll('.slide');
    let currentSlide = 0;
    
    function showSlide(index) {
        slides.forEach(slide => {
            slide.classList.remove('active');
        });
        slides[index].classList.add('active');
    }
    
    function nextSlide() {
        currentSlide = (currentSlide + 1) % slides.length;
        showSlide(currentSlide);
    }
    
    // Change slide every 5 seconds
    setInterval(nextSlide, 5000);
});

// Modal Controls
document.addEventListener('DOMContentLoaded', function() {
    window.openModal = function(modalId, productName = '') {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.classList.add('active');
            document.body.style.overflow = 'hidden';
            
            if (modalId === 'orderModal' && productName) {
                document.getElementById('orderProduct').value = productName;
                
                // –ù–∞—Ö–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
                const catalogItems = document.querySelectorAll('.catalog-item');
                catalogItems.forEach(item => {
                    if (item.querySelector('h3').textContent === productName) {
                        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                        const image = item.querySelector('img').src;
                        document.getElementById('orderProductImage').src = image;
                        document.getElementById('orderProductImage').alt = productName;
                        
                        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
                        const description = item.querySelector('p').textContent;
                        document.getElementById('orderProductDescription').textContent = description;
                        
                        // –û–±–Ω–æ–≤–ª—è–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                        const featuresList = document.getElementById('orderProductFeatures');
                        featuresList.innerHTML = '';
                        const features = item.querySelector('.features').innerHTML;
                        featuresList.innerHTML = features;
                        
                        // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–µ–Ω—É
                        const price = item.querySelector('.text-2xl').textContent;
                        document.getElementById('orderProductPrice').textContent = price;
                    }
                });
            }
        }
    };
    
    window.closeModal = function(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.classList.remove('active');
            document.body.style.overflow = '';
        }
    };
    
    // Close modal when clicking outside the modal content
    window.addEventListener('click', function(event) {
        const modals = document.querySelectorAll('.modal');
        modals.forEach(modal => {
            if (event.target === modal) {
                modal.classList.remove('active');
                document.body.style.overflow = '';
            }
        });
    });

    // Close modal when pressing Escape key
    window.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            const activeModals = document.querySelectorAll('.modal.active');
            activeModals.forEach(modal => {
                modal.classList.remove('active');
                document.body.style.overflow = '';
            });
        }
    });
});

// Form Handling
document.addEventListener('DOMContentLoaded', function() {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ñ–æ—Ä–º
    const forms = document.querySelectorAll('form');
    forms.forEach(form => {
        form.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formId = form.id;
            let message = '';
            
            switch(formId) {
                case 'heroForm':
                    message = `
üéØ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã!
üë§ –ò–º—è: ${form.querySelector('#heroName').value}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${form.querySelector('#heroPhone').value}
‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString()}
                    `;
                    break;
                    
                case 'simpleOrderForm':
                    message = `
üéØ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø—Ä–æ—Å—Ç–æ–π –∑–∞–∫–∞–∑!
üë§ –ò–º—è: ${form.querySelector('#simpleOrderName').value}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${form.querySelector('#simpleOrderPhone').value}
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${form.querySelector('#simpleOrderComment').value}
‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString()}
                    `;
                    break;
                    
                case 'quizForm':
                    const purpose = form.querySelector('input[name="purpose"]:checked')?.value;
                    const size = form.querySelector('input[name="size"]:checked')?.value;
                    const features = Array.from(form.querySelectorAll('input[name="features"]:checked')).map(f => f.value);
                    const design = form.querySelector('input[name="design"]:checked')?.value;
                    
                    message = `
üéØ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –∏–∑ –∫–≤–∏–∑–∞!
üë§ –ò–º—è: ${form.querySelector('#quizName').value}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${form.querySelector('#quizPhone').value}
üéØ –¶–µ–ª—å: ${purpose}
üìè –†–∞–∑–º–µ—Ä: ${size}
üîß –§—É–Ω–∫—Ü–∏–∏: ${features.join(', ')}
üé® –î–∏–∑–∞–π–Ω: ${design}
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${form.querySelector('#quizComment').value}
‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString()}
                    `;
                    break;
                    
                case 'discountForm':
                    message = `
üéØ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Å–∫–∏–¥–∫—É!
üë§ –ò–º—è: ${form.querySelector('#discountName').value}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${form.querySelector('#discountPhone').value}
‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString()}
                    `;
                    break;
                    
                case 'orderForm':
                    message = `
üéØ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–∫–∞–∑ —Ç–æ–≤–∞—Ä–∞!
üë§ –ò–º—è: ${form.querySelector('#orderName').value}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${form.querySelector('#orderPhone').value}
üéØ –¢–æ–≤–∞—Ä: ${form.querySelector('#orderProduct').value}
‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString()}
                    `;
                    break;
                    
                case 'contactForm':
                    message = `
üéØ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —Ñ–æ—Ä–º—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤!
üë§ –ò–º—è: ${form.querySelector('#contactName').value}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${form.querySelector('#contactPhone').value}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${form.querySelector('#contactMessage').value}
‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString()}
                    `;
                    break;
            }
            
            if (message) {
                try {
                    await fetch('/telegram_proxy.php', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ message: message })
                    });
                    
                    window.location.href = '/thank-you.html';
                } catch (error) {
                    console.error('Error:', error);
                    alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                }
            }
        });
    });
});

// Quiz Functions
function initQuiz() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–¥–∏–æ-–∫–Ω–æ–ø–æ–∫
    document.querySelectorAll('input[type="radio"]').forEach(radio => {
        radio.addEventListener('change', function() {
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö —á–µ–∫–±–æ–∫—Å–æ–≤ –≤ –≥—Ä—É–ø–ø–µ
            this.closest('.quiz-step').querySelectorAll('.radio-checked').forEach(check => {
                check.classList.add('hidden');
            });
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —á–µ–∫–±–æ–∫—Å–∞
            this.parentElement.querySelector('.radio-checked').classList.remove('hidden');
        });
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–µ–∫–±–æ–∫—Å–æ–≤
    document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
        checkbox.addEventListener('change', function() {
            const checkmark = this.parentElement.querySelector('.checkbox-checked');
            if (this.checked) {
                checkmark.classList.remove('hidden');
            } else {
                checkmark.classList.add('hidden');
            }
        });
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞
    document.querySelector('.quiz-step[data-step="1"]').querySelector('.radio-checked').classList.remove('hidden');
}

function nextQuizStep(currentStep, nextStep) {
    const currentStepElement = document.querySelector(`.quiz-step[data-step="${currentStep}"]`);
    const nextStepElement = document.querySelector(`.quiz-step[data-step="${nextStep}"]`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
    const requiredInputs = currentStepElement.querySelectorAll('input[required]');
    let isValid = true;
    
    requiredInputs.forEach(input => {
        if (input.type === 'radio' && !currentStepElement.querySelector(`input[name="${input.name}"]:checked`)) {
            isValid = false;
            showError(input.name, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤');
        } else if (input.type === 'checkbox' && !currentStepElement.querySelector(`input[name="${input.name}"]:checked`)) {
            isValid = false;
            showError(input.name, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç');
        }
    });
    
    if (!isValid) return;
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π
    currentStepElement.classList.remove('active');
    nextStepElement.classList.add('active');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    const progress = (nextStep / 5) * 100;
    document.getElementById('quizProgress').style.width = `${progress}%`;
}

function prevQuizStep(currentStep, prevStep) {
    const currentStepElement = document.querySelector(`.quiz-step[data-step="${currentStep}"]`);
    const prevStepElement = document.querySelector(`.quiz-step[data-step="${prevStep}"]`);
    
    currentStepElement.classList.remove('active');
    prevStepElement.classList.add('active');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    const progress = (prevStep / 5) * 100;
    document.getElementById('quizProgress').style.width = `${progress}%`;
}

// Initialize quiz when DOM is loaded
document.addEventListener('DOMContentLoaded', function() {
    initQuiz();
});

// Product Modal Functions
function openProductModal(product) {
    const modal = document.getElementById('productModal');
    const modalTitle = modal.querySelector('.text-2xl');
    const modalImage = modal.querySelector('img');
    const modalDescription = modal.querySelector('.text-gray-400');
    const modalFeatures = modal.querySelector('.space-y-2');
    const modalPrice = modal.querySelector('.text-3xl');
    const modalForm = modal.querySelector('form');
    
    // Update modal content
    modalTitle.textContent = product.title;
    modalImage.src = product.image;
    modalImage.alt = product.title;
    modalDescription.textContent = product.description;
    modalPrice.textContent = product.price;
    
    // Update features list
    modalFeatures.innerHTML = product.features.map(feature => 
        `<li class="flex items-center">
            <svg class="w-5 h-5 text-primary mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            ${feature}
        </li>`
    ).join('');
    
    // Update form action
    modalForm.dataset.product = product.title;
    
    // Show modal
    openModal('productModal');
}

// Add event listeners for product modal
document.addEventListener('DOMContentLoaded', function() {
    const productForm = document.querySelector('#productModal form');
    if (productForm) {
        productForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            if (validateForm('product')) {
                const data = {
                    name: document.getElementById('productName').value,
                    phone: document.getElementById('productPhone').value,
                    product: this.dataset.product
                };
                
                let message = `<b>üî• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞</b>\n`;
                message += `<b>–§–æ—Ä–º–∞:</b> –ó–∞–∫–∞–∑ —Ç–æ–≤–∞—Ä–∞\n\n`;
                message += `<b>–¢–æ–≤–∞—Ä:</b> ${data.product}\n`;
                message += `<b>–ò–º—è:</b> ${data.name}\n`;
                message += `<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${data.phone}\n`;
                message += `\n<b>–î–∞—Ç–∞:</b> ${new Date().toLocaleString('ru-RU')}\n`;
                
                fetch('/telegram_proxy.php', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        message: message
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = '/thank-you.html';
                    } else {
                        throw new Error('Failed to send message');
                    }
                })
                .catch((error) => {
                    console.error('Error:', error);
                    alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
                });
            }
        });
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
function handleImageUpload(input, index) {
    const file = input.files[0];
    if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
            const container = input.parentElement;
            const placeholder = container.querySelector('.bg-gray-800');
            const img = document.createElement('img');
            img.src = e.target.result;
            img.className = 'w-full h-24 object-cover rounded-lg cursor-pointer';
            img.onclick = function() { openPhotoViewer(this.src); };
            placeholder.replaceWith(img);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const deleteButton = document.createElement('button');
            deleteButton.className = 'absolute top-1 right-1 w-6 h-6 bg-black bg-opacity-50 rounded-full flex items-center justify-center text-white opacity-0 group-hover:opacity-100 transition-opacity';
            deleteButton.innerHTML = '<i class="ri-close-line"></i>';
            deleteButton.onclick = function(e) {
                e.stopPropagation();
                img.replaceWith(placeholder);
                input.value = '';
            };
            container.appendChild(deleteButton);
        };
        reader.readAsDataURL(file);
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–æ—Ç–æ
function openPhotoViewer(imageSrc) {
    const modal = document.getElementById('photoViewerModal');
    const image = document.getElementById('photoViewerImage');
    
    if (modal && image) {
        image.src = imageSrc;
        modal.style.display = 'block';
        document.body.style.overflow = 'hidden';
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ç–æ –≤ –ø–æ–ª–Ω–æ–º —Ä–∞–∑–º–µ—Ä–µ
function openFullImage(src) {
    const modal = document.getElementById('fullImageModal');
    const fullImage = document.getElementById('fullImage');
    fullImage.src = src;
    modal.classList.add('active');
    document.body.style.overflow = 'hidden';
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –∫–≤–∏–∑–∞
document.getElementById('quizForm').addEventListener('submit', function(e) {
    e.preventDefault();
    window.location.href = '/thank-you.html';
});

// –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã –∫–≤–∏–∑–∞
function validateQuizForm(data) {
    let isValid = true;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º—è
    if (!data.name.trim()) {
        showError('quizName', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è');
        isValid = false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω
    const phoneRegex = /^\+7\s\(\d{3}\)\s\d{3}-\d{2}-\d{2}$/;
    if (!phoneRegex.test(data.phone)) {
        showError('quizPhone', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
        isValid = false;
    }
    
    return isValid;
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
async function sendToTelegram(data) {
    const BOT_TOKEN = 'YOUR_BOT_TOKEN'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    const CHAT_ID = 'YOUR_CHAT_ID'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à chat_id
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `
üéØ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–¥–±–æ—Ä –º–∞–Ω–≥–∞–ª–∞:

üë§ –ò–º—è: ${data.name}
üì± –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}

üéØ –¶–µ–ª—å: ${data.purpose}
üìè –†–∞–∑–º–µ—Ä: ${data.size}
üé® –î–∏–∑–∞–π–Ω: ${data.design}
‚ú® –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: ${data.features.join(', ')}

üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${data.comment || '–ù–µ —É–∫–∞–∑–∞–Ω'}
    `;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API Telegram
    return fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            chat_id: CHAT_ID,
            text: message,
            parse_mode: 'HTML'
        })
    });
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫
function showError(fieldId, message) {
    const errorElement = document.getElementById(`${fieldId}Error`);
    if (errorElement) {
        errorElement.textContent = message;
        errorElement.style.display = 'block';
    }
}

// –§—É–Ω–∫—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è –æ—à–∏–±–æ–∫
function hideError(fieldId) {
    const errorElement = document.getElementById(`${fieldId}Error`);
    if (errorElement) {
        errorElement.style.display = 'none';
    }
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –æ—à–∏–±–æ–∫ –ø—Ä–∏ –≤–≤–æ–¥–µ
document.getElementById('quizName').addEventListener('input', () => hideError('quizName'));
document.getElementById('quizPhone').addEventListener('input', () => hideError('quizPhone')); 